# Quick access to here: bit.ly/LXsetup
# Sections are divided by blank lines 
# For sections with empty variables, paste them in a text editior for editing them conveniently
# Windows users, in the >>terminal<<:
# To COPY use Ctrl+Shift+C
# To PASTE use Ctrl+Shift+V

# Main script(to be executed before anything below this secton is)
# Execute by copy-pasting the raw text from the site into a terminal
# Ensure a stabe internet connection, or use your phone's USB Tethering feature
https://raw.githubusercontent.com/MrGrappleMan/JustPerformance/main/LX.sh

# OpenSSH:
sudo apt-fast update; sudo apt-fast dist-upgrade -y; sudo apt-fast install ufw openssh-server -y; sudo systemctl enable --now ssh; sudo ufw allow ssh

# TightVNC:
sudo apt-fast update; sudo apt-fast dist-upgrade -y; sudo apt install tightvncserver -y; sudo vncserver

# For Performance:
sudo apt-fast update; sudo apt-fast dist-upgrade -y; sudo apt-fast install cpufrequtils -y; sudo echo 'GOVERNOR="performance"' | sudo tee /etc/default/cpufrequtils; sudo systemctl disable ondemand
# For OnDemand(default for most distributions):
sudo apt-fast update; sudo apt-fast dist-upgrade -y; sudo apt-fast install cpufrequtils -y; sudo echo 'GOVERNOR="ondemand"' | sudo tee /etc/default/cpufrequtils; sudo systemctl enable ondemand

# Science United
# Register at https://scienceunited.org/
EMAIL=
PASSWORD=
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 40254C9B29853EA6
sudo apt-add-repository deb https://boinc.berkeley.edu/dl/linux/nightly/jammy jammy main -y
sudo apt-fast install boinc-client boinc-manager nvidia-cuda-toolkit ocl-icd-libopencl1 boinc-virtualbox -y; sudo systemctl enable --now boinc-client; sudo usermod -aG boinc $USER
boinccmd --join_acct_mgr https://scienceunited.org/ $EMAIL $PASSWORD
cd /etc/boinc-client/
sudo chmod 777 /etc/boinc-client/cc_config.xml >/dev/null 2>&1
sudo cat > cc_config.xml << 'EOL'
<?xml version="1.0" encoding="UTF-8" ?>
<cc_config>
    <log_flags>
		<task>0</task>
		<file_xfer>0</file_xfer>
    	<sched_ops>0</sched_ops>
    </log_flags>
    <options>
	<abort_jobs_on_exit>1</abort_jobs_on_exit>
	<allow_multiple_clients>0</allow_multiple_clients>
	<allow_remote_gui_rpc>0</allow_remote_gui_rpc>
	<disallow_attach>0</disallow_attach>
	<dont_check_file_sizes>0</dont_check_file_sizes>
	<dont_contact_ref_site>0</dont_contact_ref_site>
	<dont_suspend_nci>0</dont_suspend_nci>
	<dont_use_vbox>0</dont_use_vbox>
	<exit_before_start>0</exit_before_start>
	<exit_when_idle>0</exit_when_idle>
	<fetch_minimal_work>0</fetch_minimal_work>
	<fetch_on_update>1</fetch_on_update>
	<lower_client_priority>0</lower_client_priority>
	<max_event_log_lines>1</max_event_log_lines>
	<max_file_xfers>262144</max_file_xfers>
	<max_file_xfers_per_project>262144</max_file_xfers_per_project>
	<max_tasks_reported>262144</max_tasks_reported>
	<no_alt_platform>0</no_alt_platform>
	<no_gpus>0</no_gpus>
	<no_info_fetch>0</no_info_fetch>
	<no_opencl>0</no_opencl>
	<no_priority_change>0</no_priority_change>
	<no_rdp_check>1</no_rdp_check>
	<os_random_only>0</os_random_only>
	<process_priority>4</process_priority>
	<process_priority_special>4</process_priority_special>
	<rec_half_life_days>30</rec_half_life_days>
	<report_results_immediately>1</report_results_immediately>
	<run_apps_manually>0</run_apps_manually>
	<save_stats_days>0</save_stats_days>
	<simple_gui_only>0</simple_gui_only>
	<skip_cpu_benchmarks>0</skip_cpu_benchmarks>
	<suppress_net_info>0</suppress_net_info>
	<use_all_gpus>1</use_all_gpus>
	<use_certs>1</use_certs>
	<use_certs_only>0</use_certs_only>
	<vbox_window>0</vbox_window>
    </options>
</cc_config>
EOL

# RTL88x2BU Network Driver
sudo apt-fast install git -y
sudo git clone "https://github.com/RinCat/RTL88x2BU-Linux-Driver.git" /usr/src/rtl88x2bu-git
sudo sed -i 's/PACKAGE_VERSION="@PKGVER@"/PACKAGE_VERSION="git"/g' /usr/src/rtl88x2bu-git/dkms.conf
sudo dkms add -m rtl88x2bu -v git
sudo dkms autoinstall

# Docker stuff
# !`Setup----------

# `Packetstream----------
APIKEY=
sudo docker run -d --name psclient -e CID=$APIKEY packetstream/psclient:latest
# `EarnFM----------
APIKEY=
sudo docker run -d --name earnfm-client -e EARNFM_TOKEN=$APIKEY earnfm/earnfm-client:latest
# `Honeygain----------
EMAIL=
PASSWORD=
DEVICENAME=
sudo docker run -d --name honeygain honeygain/honeygain -tou-accept -email $EMAIL -pass $PASSWORD -device $DEVICENAME
# `PawnsApp----------
EMAIL=
PASSWORD=
DEVICENAME=
DEVICEID=
sudo docker run -d --name pawns-cli iproyal/pawns-cli:latest -email=$EMAIL -password=$PASSWORD -device-name=$DEVICENAME -device-id=$DEVICEID -accept-tos
# `Repocket----------
EMAIL=
APIKEY=
sudo docker run -d --name repocket -e RP_EMAIL=$EMAIL -e RP_API_KEY=$APIKEY repocket/repocket
# !`Final----------
CONTAINERS='mgmpsclient mgmearnfm-client honeygain repocket pawns-cli earnfm-client psclient'
sudo docker run -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --include-stopped --include-restarting --revive-stopped --interval 300 $CONTAINERS
sudo docker update --restart=always --memory-swap=-1 --cpus=0.000 --cpu-quota=0 --pids-limit=-1 --cpu-rt-period=2000000 $(sudo docker ps -q -a)
# !`Remove all(For emergencies)----------
sudo docker rm $(sudo docker ps -q -a) -f
